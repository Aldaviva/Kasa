using System.Collections.Generic;

namespace Kasa;

internal readonly struct TimeZones {

    public static readonly IReadOnlyDictionary<string, int> WindowsZoneIdsToDeviceIndices = new Dictionary<string, int> {
        { "Greenwich Standard Time", 38 },
        { "E. Africa Standard Time", 63 },
        { "W. Central Africa Standard Time", 43 },
        { "South Africa Standard Time", 52 },
        { "Egypt Standard Time", 50 },
        { "Morocco Standard Time", 37 },
        { "Romance Standard Time", 43 },
        { "Sudan Standard Time", 63 },
        { "Sao Tome Standard Time", 38 },
        { "Libya Standard Time", 58 },
        { "Namibia Standard Time", 46 },
        { "Alaskan Standard Time", 3 },
        { "SA Western Standard Time", 22 },
        { "Tocantins Standard Time", 33 },
        { "Argentina Standard Time", 29 },
        { "Paraguay Standard Time", 21 },
        { "SA Pacific Standard Time", 17 },
        { "Aleutian Standard Time", 2 },
        { "Bahia Standard Time", 33 },
        { "Central Standard Time (Mexico)", 14 },
        { "SA Eastern Standard Time", 33 },
        { "Central America Standard Time", 12 },
        { "Mountain Standard Time", 10 },
        { "Central Brazilian Standard Time", 24 },
        { "Eastern Standard Time (Mexico)", 18 },
        { "Venezuela Standard Time", 20 },
        { "Central Standard Time", 13 },
        { "Mountain Standard Time (Mexico)", 8 },
        { "US Mountain Standard Time", 7 },
        { "Yukon Standard Time", 6 },
        { "Eastern Standard Time", 18 },
        { "Pacific Standard Time (Mexico)", 4 },
        { "US Eastern Standard Time", 19 },
        { "Atlantic Standard Time", 23 },
        { "Greenland Standard Time", 31 },
        { "Turks And Caicos Standard Time", 18 },
        { "Cuba Standard Time", 16 },
        { "Pacific Standard Time", 6 },
        { "Saint Pierre Standard Time", 31 },
        { "Montevideo Standard Time", 32 },
        { "UTC-02", 34 },
        { "Haiti Standard Time", 18 },
        { "Canada Central Standard Time", 15 },
        { "Pacific SA Standard Time", 33 },
        { "E. South America Standard Time", 28 },
        { "Azores Standard Time", 35 },
        { "Newfoundland Standard Time", 27 },
        { "Central Pacific Standard Time", 102 },
        { "SE Asia Standard Time", 82 },
        { "West Pacific Standard Time", 97 },
        { "Tasmania Standard Time", 96 },
        { "West Asia Standard Time", 74 },
        { "New Zealand Standard Time", 104 },
        { "Central Asia Standard Time", 79 },
        { "W. Europe Standard Time", 43 },
        { "Arab Standard Time", 60 },
        { "Jordan Standard Time", 47 },
        { "Russia Time Zone 11", 103 },
        { "Arabic Standard Time", 59 },
        { "Azerbaijan Standard Time", 66 },
        { "Middle East Standard Time", 49 },
        { "Singapore Standard Time", 86 },
        { "India Standard Time", 75 },
        { "Transbaikal Standard Time", 92 },
        { "Ulaanbaatar Standard Time", 89 },
        { "China Standard Time", 84 },
        { "Sri Lanka Standard Time", 76 },
        { "Bangladesh Standard Time", 79 },
        { "Syria Standard Time", 51 },
        { "Tokyo Standard Time", 90 },
        { "Arabian Standard Time", 65 },
        { "West Bank Standard Time", 56 },
        { "W. Mongolia Standard Time", 82 },
        { "North Asia East Standard Time", 85 },
        { "Turkey Standard Time", 55 },
        { "Israel Standard Time", 56 },
        { "Afghanistan Standard Time", 71 },
        { "Pakistan Standard Time", 74 },
        { "Nepal Standard Time", 77 },
        { "Yakutsk Standard Time", 92 },
        { "North Asia Standard Time", 83 },
        { "Magadan Standard Time", 99 },
        { "GTB Standard Time", 55 },
        { "N. Central Asia Standard Time", 80 },
        { "Omsk Standard Time", 80 },
        { "North Korea Standard Time", 91 },
        { "Qyzylorda Standard Time", 78 },
        { "Myanmar Standard Time", 79 },
        { "Sakhalin Standard Time", 99 },
        { "Korea Standard Time", 91 },
        { "Russia Time Zone 10", 101 },
        { "Taipei Standard Time", 88 },
        { "Georgian Standard Time", 69 },
        { "Iran Standard Time", 64 },
        { "Vladivostok Standard Time", 100 },
        { "Ekaterinburg Standard Time", 73 },
        { "Caucasus Standard Time", 70 },
        { "GMT Standard Time", 37 },
        { "Cape Verde Standard Time", 36 },
        { "AUS Eastern Standard Time", 96 },
        { "Cen. Australia Standard Time", 93 },
        { "E. Australia Standard Time", 95 },
        { "AUS Central Standard Time", 94 },
        { "Aus Central W. Standard Time", 87 },
        { "Lord Howe Standard Time", 96 },
        { "W. Australia Standard Time", 87 },
        { "Easter Island Standard Time", 18 },
        { "UTC", 38 },
        { "UTC+12", 105 },
        { "UTC+13", 107 },
        { "Line Islands Standard Time", 109 },
        { "Hawaiian Standard Time", 2 },
        { "UTC-11", 1 },
        { "Dateline Standard Time", 0 },
        { "UTC-08", 5 },
        { "UTC-09", 3 },
        { "Central Europe Standard Time", 44 },
        { "E. Europe Standard Time", 52 },
        { "FLE Standard Time", 52 },
        { "Kaliningrad Standard Time", 57 },
        { "Belarus Standard Time", 61 },
        { "Russian Standard Time", 62 },
        { "Russia Time Zone 3", 67 },
        { "Central European Standard Time", 44 },
        { "Volgograd Standard Time", 62 },
        { "Mauritius Standard Time", 70 },
        { "Chatham Islands Standard Time", 104 },
        { "Samoa Standard Time", 108 },
        { "Bougainville Standard Time", 102 },
        { "Fiji Standard Time", 106 },
        { "Marquesas Standard Time", 3 },
        { "Norfolk Standard Time", 102 },
        { "Tonga Standard Time", 107 },
    };

    public static readonly IReadOnlyDictionary<int, string> DeviceIndicesToWindowsZoneIds = new Dictionary<int, string>();

    static TimeZones() {
        // DeviceIndicesToZoneIds = ZoneIdsToDeviceIndices.ToDictionary(pair => pair.Value, pair => pair.Key);
        foreach (KeyValuePair<string, int> zoneIdsToDeviceIndex in WindowsZoneIdsToDeviceIndices) {
            int value = zoneIdsToDeviceIndex.Value;
            ((Dictionary<int, string>) DeviceIndicesToWindowsZoneIds)[value] = zoneIdsToDeviceIndex.Key;
        }
    }
    // (IDictionary<int, string>) ZoneIdsToDeviceIndices.Keys.Zip(ZoneIdsToDeviceIndices.Values, (zoneId, deviceIndex) => new KeyValuePair<int, string>(deviceIndex, zoneId)).ToDictionary()

}